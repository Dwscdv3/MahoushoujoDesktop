<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MahoushoujoDesktop"
        xmlns:local.UI="clr-namespace:MahoushoujoDesktop.UI"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:UserControls="clr-namespace:Dwscdv3.WPF.UserControls"
        xmlns:DataModel="clr-namespace:MahoushoujoDesktop.DataModel"
    
        xmlns:Binding="clr-namespace:MahoushoujoDesktop.ValueConverter"
    
        x:Name="window" x:Class="MahoushoujoDesktop.MainWindow"
        mc:Ignorable="d"
        TextOptions.TextHintingMode="Animated"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        Title="Mahoushoujo Desktop" Width="{x:Static local:Const.MainWindowWidth}" AllowsTransparency="True" WindowStyle="None" Foreground="White" ShowInTaskbar="False" ResizeMode="NoResize" FontSize="16" d:DesignHeight="720" Loaded="window_Loaded" Background="{DynamicResource BlackLinearGradientBrush}" Activated="window_Activated" SizeChanged="window_SizeChanged" Topmost="True">

    <Window.Resources>
        <Binding:BooleanNotConverter x:Key="BooleanNotConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <Style x:Key="CollapseOpacity0Style" TargetType="{x:Type FrameworkElement}">
            <Style.Triggers>
                <Trigger Property="Opacity" Value="0">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="#00000000"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="BorderBrush" Value="#7FFFFFFF"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="SelectionOpacity" Value="0.75"/>
            <Style.Triggers>
                <Trigger Property="Text" Value="{x:Null}">
                    <Setter Property="Background" Value="{DynamicResource Hint}"/>
                </Trigger>
                <Trigger Property="Text" Value="">
                    <Setter Property="Background" Value="{DynamicResource Hint}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="PasswordBoxStyle" TargetType="{x:Type PasswordBox}">
            <Setter Property="Background" Value="#00000000"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="BorderBrush" Value="#7FFFFFFF"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="SelectionOpacity" Value="0.75"/>
            <Style.Triggers>
                <Trigger Property="local.UI:PasswordHelper.Password" Value="{x:Null}">
                    <Setter Property="Background" Value="{DynamicResource Hint}"/>
                </Trigger>
                <Trigger Property="local.UI:PasswordHelper.Password" Value="">
                    <Setter Property="Background" Value="{DynamicResource Hint}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FlatButtonStyle" TargetType="{x:Type ButtonBase}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Grid>
                            <Rectangle x:Name="Bg" Fill="#7FFFFFFF" Opacity="0"/>
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" TargetName="Bg" Value="0.5"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" TargetName="Bg" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.25"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FlatIconButtonStyle" TargetType="{x:Type ButtonBase}">
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
            <Setter Property="FontSize" Value="32px"/>
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Grid>
                            <Rectangle x:Name="Bg" Fill="#7FFFFFFF" Opacity="0"/>
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" TargetName="Bg" Value="0.5"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" TargetName="Bg" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.25"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FlatGradientButtonStyle" TargetType="{x:Type ButtonBase}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Grid>
                            <Rectangle x:Name="highlight" Fill="{TemplateBinding Background}" Opacity="0"/>
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" TargetName="highlight" Value="0.5"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" TargetName="highlight" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.25"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="FlatToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="Bd" Value="#3FFFFFFF"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="Bd" Value="#7FFFFFFF"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Foreground" Value="#FFFF7FBF"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <LinearGradientBrush x:Key="BlackLinearGradientBrush" EndPoint="1,0.5" StartPoint="0,0.5">
            <GradientStop Color="#00000000"/>
            <GradientStop Color="#BF000000" Offset="1"/>
        </LinearGradientBrush>
        <Storyboard x:Key="SlideInStoryboard">
            <DoubleAnimation
                Storyboard.TargetName="window"
                Storyboard.TargetProperty="Left"
                To="{x:Static local:Const.ScreenRightBoundMinusMainWindowWidth}" Duration="0:0:0.15"/>
        </Storyboard>
        <Storyboard x:Key="SlideOutStoryboard">
            <DoubleAnimation
                Storyboard.TargetName="window"
                Storyboard.TargetProperty="Left"
                To="{x:Static local:Const.ScreenRightBound}" Duration="0:0:0.15"
                Completed="SlideOut_Completed" />
        </Storyboard>
        <Storyboard x:Key="ProgressCircleExitStoryboard">
            <DoubleAnimation
                Storyboard.TargetName="progressCircleExit"
                Storyboard.TargetProperty="Value"
                From="0" To="100" Duration="0:0:0.8"
                Completed="ProgressCircleExit_Completed"/>
        </Storyboard>

        <!-- Slider Template -->
        <Style x:Key="RepeatButtonLeft" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Grid>
                            <Rectangle Fill="{TemplateBinding Background}" Height="4" Width="{TemplateBinding Width}"/>
                            <Rectangle Fill="Transparent"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RepeatButtonRight" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Grid>
                            <Rectangle Fill="{TemplateBinding Background}" Height="4" Width="{TemplateBinding Width}"/>
                            <Rectangle Fill="Transparent"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Ellipse x:Name="grip" Width="20" Height="20" StrokeThickness="2" Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Foreground}"/>
                <Ellipse Width="10" Height="10" Fill="{TemplateBinding BorderBrush}"/>
                <Ellipse x:Name="highlight" Width="20" Height="20" StrokeThickness="0"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="highlight" Value="#3FFFFFFF"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="highlight" Value="#7FFFFFFF"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="Gray"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
            <Border x:Name="border" SnapsToDevicePixels="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                    <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                    <Track x:Name="PART_Track" Grid.Row="1">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonLeft}" Background="{TemplateBinding Foreground}"/>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonRight}" Background="{TemplateBinding Background}"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb x:Name="Thumb" Focusable="False" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbHorizontalDefault}" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center"/>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsSelectionRangeEnabled" Value="true"/>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="SliderStyle" TargetType="{x:Type Slider}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Background" Value="#3F000000"/>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="Foreground" Value="#FFFF7FBF"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template" Value="{StaticResource SliderHorizontal}"/>
        </Style>
    </Window.Resources>
    <Grid x:Name="gridRoot">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AddFavoriteListVisibility">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0:0:0.2"/>
                    <VisualTransition GeneratedDuration="0:0:0.2" To="AddFavoriteListVisible">
                        <Storyboard>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="itemsAlbumList">
                                <EasingThicknessKeyFrame KeyTime="0" Value="0,50,0,-50">
                                    <EasingThicknessKeyFrame.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut" Exponent="3"/>
                                    </EasingThicknessKeyFrame.EasingFunction>
                                </EasingThicknessKeyFrame>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="0">
                                    <EasingThicknessKeyFrame.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut" Exponent="3"/>
                                    </EasingThicknessKeyFrame.EasingFunction>
                                </EasingThicknessKeyFrame>
                            </ThicknessAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="itemsAlbumList">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="itemsAlbumList">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualTransition>
                    <VisualTransition From="AddFavoriteListVisible" GeneratedDuration="0:0:0.2">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="itemsAlbumList">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut" Exponent="3"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut" Exponent="3"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="itemsAlbumList">
                                <EasingThicknessKeyFrame KeyTime="0" Value="0">
                                    <EasingThicknessKeyFrame.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut"/>
                                    </EasingThicknessKeyFrame.EasingFunction>
                                </EasingThicknessKeyFrame>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="0,50,0,-50">
                                    <EasingThicknessKeyFrame.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut"/>
                                    </EasingThicknessKeyFrame.EasingFunction>
                                </EasingThicknessKeyFrame>
                            </ThicknessAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="itemsAlbumList">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Hidden}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="AddFavoriteListVisible">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="itemsAlbumList">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="itemsAlbumList">
                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="AddFavoriteListHidden"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.OpacityMask>
            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                <GradientStop Color="#BF000000" Offset="0"/>
                <GradientStop Color="Black" Offset="1"/>
            </LinearGradientBrush>
        </Grid.OpacityMask>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="10"/>
        </Grid.ColumnDefinitions>

        <Grid.Effect>
            <DropShadowEffect BlurRadius="3" ShadowDepth="1"/>
        </Grid.Effect>
        <Grid x:Name="gridContent" Grid.ColumnSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <StackPanel x:Name="stackPanelMain" Grid.RowSpan="2">
                <Grid x:Name="gridTabHeader" Height="60" Margin="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition Width="60"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="1" Margin="5">
                        <TextBlock x:Name="textTabSetting" Text="&#xE713;" FontFamily="Segoe MDL2 Assets" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>
                        <Button x:Name="buttonTabSetting" Style="{DynamicResource FlatButtonStyle}" Click="tabHeader_Click">
                            <Button.OpacityMask>
                                <RadialGradientBrush>
                                    <GradientStop Color="Black" Offset="1"/>
                                    <GradientStop Offset="1"/>
                                </RadialGradientBrush>
                            </Button.OpacityMask>
                        </Button>
                    </Grid>
                    <Grid Grid.Column="2" Margin="5">
                        <TextBlock x:Name="textTabDiscover" Text="&#xE721;" FontFamily="Segoe MDL2 Assets" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24"/>
                        <Button x:Name="buttonTabDiscover" Style="{DynamicResource FlatButtonStyle}" Click="tabHeader_Click">
                            <Button.OpacityMask>
                                <RadialGradientBrush>
                                    <GradientStop Color="Black" Offset="1"/>
                                    <GradientStop Offset="1"/>
                                </RadialGradientBrush>
                            </Button.OpacityMask>
                        </Button>
                    </Grid>
                    <Grid Grid.Column="3" Margin="5">
                        <Grid>
                            <Ellipse Fill="#3FFFFFFF"/>
                            <TextBlock x:Name="textDefaultAvatar" Text="&#xE77B;" FontFamily="Segoe MDL2 Assets" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24" Margin="13"/>
                            <local.UI:WaitRing x:Name="waitRingLogin" Foreground="#FF66CCFF" Margin="2" Visibility="{Binding IsLoggingIn, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=window}" FrameRate="20"/>
                        </Grid>
                        <Ellipse x:Name="ellipseUserAvatar">
                            <Ellipse.Fill>
                                <ImageBrush Stretch="UniformToFill"/>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Button x:Name="buttonUserAvatar" Style="{DynamicResource FlatButtonStyle}" Click="tabHeader_Click">
                            <Button.OpacityMask>
                                <RadialGradientBrush>
                                    <GradientStop Color="Black" Offset="1"/>
                                    <GradientStop Offset="1"/>
                                </RadialGradientBrush>
                            </Button.OpacityMask>
                        </Button>
                    </Grid>
                    <Ellipse x:Name="ellipseSelectedTab" Margin="2" Stroke="#FF66CCFF" StrokeThickness="3"/>
                </Grid>
                <Grid x:Name="gridTab" Margin="0,0,10,0">
                    <Grid.Resources>
                    </Grid.Resources>
                    <StackPanel Opacity="0" Style="{StaticResource CollapseOpacity0Style}">
                        <TextBlock x:Name="textHeader" TextWrapping="Wrap" Text="Master Spark!" FontSize="31" UseLayoutRounding="True" FontFamily="Lucida Calligraphy"/>
                        <TextBlock Text="↑ 标签页栏预定&#xA;我，发现，选项" HorizontalAlignment="Right"/>
                        <TextBlock Text="——白草园与三位书屋" HorizontalAlignment="Right"/>
                        <Grid Margin="10,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="50"/>
                            </Grid.ColumnDefinitions>
                            <Slider x:Name="sliderInterval" Style="{DynamicResource SliderStyle}" BorderBrush="#FFDFDFDF" Foreground="#FFFF7FBF" Background="#3F7F7F7F" TickPlacement="BottomRight" IsSnapToTickEnabled="True" Maximum="{x:Static local:Const.NextIntervalsCount}" SmallChange="1" Margin="0,0,5,0" ValueChanged="sliderInterval_ValueChanged" LostMouseCapture="sliderInterval_LostMouseCapture"/>
                            <TextBlock x:Name="textInterval" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Right" FontSize="14"/>
                        </Grid>
                        <WrapPanel>
                            <local.UI:Tag HorizontalAlignment="Left" Margin="5" Text="风景"/>
                            <local.UI:ButtonTag HorizontalAlignment="Left" Text="※※Play" Margin="5"/>
                        </WrapPanel>
                        <local.UI:WaitRing Foreground="Red" Height="100" FrameRate="30"/>
                        <local.UI:HoldButton x:Name="holdButton" Content="HoldButton"
                                             Height="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                                             SecondaryOperation="holdButton_SecondaryOperation" MouseSecondaryOperation="RightButtonHold" Click="holdButton_Click" BorderThickness="40,0,0,0" />
                    </StackPanel>
                    <StackPanel Opacity="0" Style="{StaticResource CollapseOpacity0Style}">
                        <TextBlock>
                            <Bold>DISCOVER</Bold>
                        </TextBlock>
                    </StackPanel>
                    <StackPanel Opacity="0" Style="{StaticResource CollapseOpacity0Style}">
                        <StackPanel x:Name="stackPanelMe" Orientation="Vertical" Visibility="Collapsed">
                            <TextBlock Text="就算我死了，被钉在棺材里，我也要用腐朽的声音喊出：打死白学家！ ——鲁迅" TextWrapping="Wrap"/>
                            <WrapPanel HorizontalAlignment="Right">
                                <TextBlock Text="欢迎回来，"/>
                                <TextBlock x:Name="textBlockUserName" FontWeight="SemiBold"/>
                            </WrapPanel>
                            <Button x:Name="buttonLogOut" Content="ログアウト" Style="{DynamicResource FlatButtonStyle}" Click="buttonLogOut_Click"/>
                        </StackPanel>
                        <StackPanel x:Name="stackPanelLogin" Margin="10" IsEnabled="{Binding IsLoggingIn, Converter={StaticResource BooleanNotConverter}, ElementName=window}">
                            <TextBox x:Name="textBoxUsername" Style="{DynamicResource TextBoxStyle}" Margin="0,0,0,5" CaretBrush="White" SelectionBrush="#FFFF7FBF">
                                <TextBox.Resources>
                                    <VisualBrush x:Key="Hint" TileMode="None" Opacity="0.5" Stretch="None">
                                        <VisualBrush.Visual>
                                            <TextBlock Text="@" Foreground="White"/>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </TextBox.Resources>
                            </TextBox>
                            <PasswordBox x:Name="passwordBox" Style="{DynamicResource PasswordBoxStyle}" Margin="0,0,0,5" CaretBrush="White" SelectionBrush="#FF3FFF7F" PasswordChar="★" FontFamily="Segoe UI" local.UI:PasswordHelper.Attach="True" KeyDown="passwordBox_KeyDown">
                                <PasswordBox.Resources>
                                    <VisualBrush x:Key="Hint" TileMode="None" Opacity="0.5" Stretch="None">
                                        <VisualBrush.Visual>
                                            <TextBlock Text="☆" Foreground="White"/>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </PasswordBox.Resources>
                            </PasswordBox>
                            <Button x:Name="buttonLogin" Style="{DynamicResource FlatGradientButtonStyle}" Content="古ta妈黑暗之神！" Click="buttonLogin_Click">
                                <Button.Background>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#FFBF00FF"/>
                                        <GradientStop Offset="1" Color="#00BF00FF"/>
                                    </RadialGradientBrush>
                                </Button.Background>
                            </Button>
                            <Button x:Name="buttonSignup" Style="{DynamicResource FlatGradientButtonStyle}" Content="← 去签订契约" Click="buttonSignup_Click">
                                <Button.Background>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#FFFF7FBF"/>
                                        <GradientStop Offset="1" Color="#00FF7FBF"/>
                                    </RadialGradientBrush>
                                </Button.Background>
                            </Button>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </StackPanel>
            <StackPanel Grid.Row="1">
                <StackPanel x:Name="stackPanelInfo" Margin="0,0,10,10">
                    <TextElement.FontSize>
                        <System:Double>12</System:Double>
                    </TextElement.FontSize>
                    <Grid x:Name="gridItemsAlbumList" PreviewMouseLeftButtonDown="gridItemsAlbumList_PreviewMouseLeftButtonDown">
                        <ItemsControl x:Name="itemsAlbumList" Margin="0" Opacity="0" Visibility="Hidden"
                                      Loaded="itemsAlbumList_Loaded" Background="#7F000000" Panel.ZIndex="1">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border x:Name="favItemsBorder" CornerRadius="10" BorderThickness="1" Margin="5" Padding="0" Loaded="favItemsBorder_Loaded" SnapsToDevicePixels="True">
                                        <Border.Resources>
                                            <Color x:Key="BorderColor">#FF66CCFF</Color>
                                            <Color x:Key="BorderColorTransparent">#0066CCFF</Color>
                                        </Border.Resources>
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{StaticResource BorderColor}"/>
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <SolidColorBrush Color="{StaticResource BorderColorTransparent}"/>
                                        </Border.Background>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CheckingState">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="0:0:0.2"/>
                                                </VisualStateGroup.Transitions>
                                                <VisualState x:Name="Checked">
                                                    <Storyboard>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock">
                                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="favItemsBorder">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource BorderColor}"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="favItemsBorder">
                                                            <EasingColorKeyFrame KeyTime="0" Value="Black"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Unchecked"/>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <TextElement.Foreground>
                                            <SolidColorBrush Color="White"/>
                                        </TextElement.Foreground>
                                        <Grid>
                                            <Grid Margin="5">
                                                <StackPanel>
                                                    <TextBlock Text="{Binding Path=Name}" FontSize="18"/>
                                                    <WrapPanel Margin="5,0">
                                                        <TextBlock Text="数量: "/>
                                                        <TextBlock Text="{Binding Path=Count}"/>
                                                    </WrapPanel>
                                                </StackPanel>
                                                <TextBlock x:Name="textBlock" VerticalAlignment="Bottom" HorizontalAlignment="Right" Text="&#xE8FB;" FontFamily="Segoe MDL2 Assets" FontSize="16" Opacity="0"/>
                                            </Grid>
                                            <Button x:Name="buttonFavAlbum" Style="{StaticResource FlatButtonStyle}"
                                                    LostMouseCapture="buttonFavAlbum_LostMouseCapture" Click="buttonFavAlbum_Click"
                                                    Cursor="Hand"
                                                    Tag="{Binding Path=Self}">
                                                <Button.Template>
                                                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                        <Border Background="Transparent"/>
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>
                                        </Grid>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>
                    <Grid>
                        <TextBlock Text="此作品的详细信息" FontSize="18" Margin="0,10" HorizontalAlignment="Left"/>
                        <Button x:Name="buttonFavorite" Style="{StaticResource FlatIconButtonStyle}"
                                Content="&#xE734;"
                                HorizontalAlignment="Right"
                                Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}" Height="Auto"
                                Click="buttonFavorite_Click"/>
                        <TextBlock x:Name="textFavoriteAmount" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                    </Grid>
                    <DockPanel Margin="10,0,10,10">
                        <TextBlock Width="60" VerticalAlignment="Top" Text="ID"/>
                        <TextBlock x:Name="textId" TextWrapping="Wrap"/>
                    </DockPanel>
                    <DockPanel Margin="10,0,10,10">
                        <TextBlock Width="60" VerticalAlignment="Top" Text="标题"/>
                        <TextBlock x:Name="textTitle" TextWrapping="Wrap"/>
                    </DockPanel>
                    <DockPanel Margin="10,0,10,10">
                        <TextBlock Width="60" VerticalAlignment="Top" Text="作者"/>
                        <TextBlock x:Name="textAuthor" TextWrapping="Wrap"/>
                    </DockPanel>
                    <DockPanel Margin="10,0,10,10">
                        <TextBlock Width="60" VerticalAlignment="Top" Text="来源"/>
                        <TextBlock x:Name="textSource" TextWrapping="Wrap"/>
                    </DockPanel>
                    <DockPanel Margin="10,0,10,10">
                        <TextBlock Width="60" VerticalAlignment="Top" Text="开发状态"/>
                        <TextBlock Text="Alpha: User system&#xA;@Dwscdv3" TextWrapping="Wrap"/>
                    </DockPanel>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,10">
                    <local.UI:HoldButton x:Name="buttonPrev"
                                         ToolTip="想立刻回到最新的一张吗？试试鼠标右键或触摸按住！"
                                         Click="buttonPrev_Click" SecondaryOperation="buttonPrev_SecondaryOperation" MouseSecondaryOperation="RightButtonHold"
                                         BorderThickness="2" BorderBrush="#FF66CCFF">
                        <local.UI:HoldButton.Style>
                            <Style TargetType="{x:Type local.UI:HoldButton}">
                                <Setter Property="Content" Value="&#xE76B;"/>
                                <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
                                <Setter Property="FontSize" Value="32px"/>
                                <Setter Property="Width" Value="50"/>
                                <Setter Property="Height" Value="50"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Style.Triggers>
                                    <Trigger Property="IsProgressing" Value="True">
                                        <Setter Property="Content" Value="&#xE892;"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </local.UI:HoldButton.Style>
                    </local.UI:HoldButton>
                    <ToggleButton x:Name="buttonMainSwitch"
                                  Style="{DynamicResource FlatIconButtonStyle}" Template="{DynamicResource FlatToggleButtonTemplate}"
                                  Content="&#xE7E8;" FontSize="48px"
                                  Width="64" Height="64" Click="buttonMainSwitch_Click" Margin="10,0"/>
                    <Button x:Name="buttonNext"
                            Style="{DynamicResource FlatIconButtonStyle}"
                            Content="&#xE76C;"
                            Click="buttonNext_Click"/>
                </StackPanel>
            </StackPanel>
        </Grid>
        <Rectangle x:Name="rectHide" Grid.Column="1" StrokeThickness="0" Panel.ZIndex="1"
                   MouseRightButtonDown="rectHide_MouseRightButtonDown"
                   MouseRightButtonUp="rectHide_MouseRightButtonUp"
                   MouseLeave="rectHide_MouseLeave">
            <Rectangle.Fill>
                <SolidColorBrush x:Name="rectHideSolidColorBrush" Color="#01FFFFFF" />
            </Rectangle.Fill>
            <Rectangle.Triggers>
                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetName="rectHideSolidColorBrush"
                                Storyboard.TargetProperty="Color"
                                To="#BFFFFFFF" Duration="0:0:0.2" />
                            <ThicknessAnimation
                                Storyboard.TargetName="gridHide"
                                Storyboard.TargetProperty="Margin"
                                To="0" Duration="0:0:0.2" />
                            <DoubleAnimation
                                Storyboard.TargetName="gridContent"
                                Storyboard.TargetProperty="Opacity"
                                To="0.2" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetName="rectHideSolidColorBrush"
                                Storyboard.TargetProperty="Color"
                                To="#01FFFFFF" Duration="0:0:0.2" />
                            <ThicknessAnimation
                                Storyboard.TargetName="gridHide"
                                Storyboard.TargetProperty="Margin"
                                To="{x:Static local:Const.LabelHideMargin}" Duration="0:0:0.2" />
                            <DoubleAnimation
                                Storyboard.TargetName="gridContent"
                                Storyboard.TargetProperty="Opacity"
                                To="1" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="UIElement.MouseLeftButtonDown">
                    <BeginStoryboard Storyboard="{DynamicResource SlideOutStoryboard}"/>
                </EventTrigger>
            </Rectangle.Triggers>
        </Rectangle>
        <Grid x:Name="gridHide" Width="{x:Static local:Const.MainWindowWidth}"
              HorizontalAlignment="Right" Margin="{x:Static local:Const.LabelHideMargin}" Grid.ColumnSpan="2">
            <UserControls:CircularProgress x:Name="progressCircleExit"
                                           Width="100" Height="100"
                                           HorizontalAlignment="Center" VerticalAlignment="Center"
                                           Foreground="#FFFF3F3F"
                                           HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
            <Label x:Name="labelHide"
                   Content="→" FontSize="72" Foreground="White"
                   VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                   VerticalAlignment="Center" HorizontalAlignment="Center"/>
            <Label x:Name="labelHideDescription"
                   Content="点击隐藏" FontWeight="Light" FontSize="24" Foreground="#BFFFFFFF"
                   Margin="0,130,0,0"
                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <Label Content="（按住鼠标右键以完全退出）" FontSize="12" Foreground="#BFFFFFFF"
                   Margin="0,175,0,0"
                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <Label Content="按 Ctrl+Alt+W 重新显示此窗口" FontSize="14" Foreground="#BFFFFFFF"
                   Margin="0,220,0,0"
                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Grid>
        <ProgressBar x:Name="progressBar" Grid.Column="1" Orientation="Vertical" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="0" Foreground="#FFFF7FBF" SmallChange="0.01" LargeChange="0.1" Maximum="1"/>
        <ProgressBar x:Name="progressBarNext" Grid.Column="1" Orientation="Vertical" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="0" Foreground="#3F7F7F7F" SmallChange="0.01" LargeChange="0.1" Maximum="1"/>

    </Grid>

</Window>
